name: Compile
on:
  pull_request: {}
  # push:
  #   branches:
  #     - main
  push:
    tags:
    - '*'
jobs:

  build-windows:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - { name: "win64", os: "windows-2022", python-version: "3.9", python-major: "39"}
        - { name: "win64", os: "windows-2022", python-version: "3.11", python-major: "311"}
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1

    - name: Get CMake
      uses: lukka/get-cmake@latest

    - name: Download Libfaust
      shell: cmd
      run: |
        cd thirdparty/libfaust
        call download_libfaust.bat
    
    - name: Build TD-Faust
      shell: cmd
      run: |
        call build_windows.bat
      env:
        PYTHONVER: ${{ matrix.python-version}}

    - name: Make distribution
      run: |
        mkdir TD-Faust-${{ matrix.name }}-Python${{ matrix.python-major }}
        move ${{ github.workspace }}/Plugins/TD-Faust.dll TD-Faust-${{ matrix.name }}-Python${{ matrix.python-major }}
        move ${{ github.workspace }}/Plugins/sndfile.dll TD-Faust-${{ matrix.name }}-Python${{ matrix.python-major }}
        cp -v -r ${{ github.workspace }}/Plugins/faustlibraries TD-Faust-${{ matrix.name }}-Python${{ matrix.python-major }}
        Remove-Item -Recurse -Force "TD-Faust-${{ matrix.name }}-Python${{ matrix.python-major }}/faustlibraries/.git"
        7z a TD-Faust-${{ matrix.name }}-Python${{ matrix.python-major }}.zip ./TD-Faust-${{ matrix.name }}-Python${{ matrix.python-major }}/* -r

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: TD-Faust-${{ matrix.name }}-Python${{ matrix.python-major }}
        path: TD-Faust-${{ matrix.name }}-Python${{ matrix.python-major }}.zip

  # build-macos:
  #   strategy:
  #     matrix:
  #       include:
  #         - name: macos-x86_64
  #           os: macos-latest

  #   runs-on: macos-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #     with:
  #       submodules: true

  #   - name: Setup Python 3.8
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: '3.8'

  #   - name: Setup Python 3.9
  #     run: |
  #       pip install --upgrade certifi
  #       cd install_script
  #       python macos_install_python.py

  #   - name: Build Everything
  #     run: |
  #       export PATH=/Library/Frameworks/Python.framework/Versions/3.9:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/lib:$PATH
  #       which python3
  #       python3 --version
  #       sh -v build_macos.sh

  #   - name: Make distribution
  #     run: |
  #       rm -rf Plugins/faustlibraries/.git
  #       zip -r TD-Faust-${{ matrix.name }}-Python${{ matrix.python-major }}.zip Plugins

  #   - name: Upload artifact
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: TD-Faust-${{ matrix.name }}-Python${{ matrix.python-major }}
  #       path: TD-Faust-${{ matrix.name }}-Python${{ matrix.python-major }}.zip

  create-release:
    if: startsWith(github.ref, 'refs/tags/v')
    # needs: [build-windows, build-macos]
    needs: [build-windows]
    runs-on: ubuntu-latest
    name: "Create Release on GitHub"
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: "dist"

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
